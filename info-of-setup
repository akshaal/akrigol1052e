#!/usr/bin/python

from usbtmc import *

scope = UsbTMC()

print("")
print_sep()
ask_and_print("Identifier", "*IDN?")
print_sep()
ask_and_print_float("Sampling rate", ":ACQuire:SAMPlingrate?", "", as_wtf)
ask_and_print("Acquire type", ":ACQuire:TYPE?")
ask_and_print("Acquire mode", ":ACQuire:MODE?")
ask_and_print("Average acquisition time", ":ACQuire:AVERages?")
print("")

def chan_info(n):
    ask_and_print("Channel " + n + ": BW (bandwidth) Limit", ":CHANnel" + n + ":BWLimit?")
    ask_and_print("Channel " + n + ": Coupling", ":CHANnel" + n + ":Coupling?")
    ask_and_print("Channel " + n + ": Display", ":CHANnel" + n + ":Display?")
    ask_and_print("Channel " + n + ": Invert", ":CHANnel" + n + ":Invert?")
    ask_and_print_float("Channel " + n + ": Vertical offset", ":CHANnel" + n + ":Offset?", "", as_volt)
    ask_and_print_float("Channel " + n + ": Probe", ":CHANnel" + n + ":Probe?", " X")
    ask_and_print_float("Channel " + n + ": Scale", ":CHANnel" + n + ":Scale?", "", as_volt)
    ask_and_print("Channel " + n + ": Filter", ":CHANnel" + n + ":Filter?")
    ask_and_print_float("Channel " + n + ": Memory depth", ":CHANnel" + n + ":MEMoryDepth?", "", as_wtf)
    ask_and_print("Channel " + n + ": Vert scale adjust-mode", ":CHANnel" + n + ":VERNier?")

chan_info("1")
print("")
chan_info("2")
print("")
ask_and_print("Timebase mode", ":TIMebase:MODE?")
ask_and_print_float("Timebase offset", ":TIMebase:OFFSet?", "", as_time)
ask_and_print_float("Timebase scale", ":TIMebase:Scale?", "", as_time)
ask_and_print("Timebase format", ":TIMebase:Format?")

print_sep()
print("")

scope.close()
